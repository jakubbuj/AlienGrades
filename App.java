import java.io.File;
import java.util.Arrays;
import java.util.Scanner;

public class App{

    public static void main(String[] args) {
        //arrays 
        double[][] graduate_grades = File_To_Array("GraduateGrades.csv");
        double[][] current_grades = File_To_Array("CurrentGrades.csv");
       

       //use if you have werid bug wiht 0.0's in graduate grades. the error is located in File_To_Array - hasNextDouble
/*         
        double[][] graduate_grades={
            {8.0, 8.0, 7.0, 8.0, 6.0, 7.0, 9.0, 7.0, 8.0, 6.0, 6.0, 9.0, 10.0, 8.0, 6.0, 10.0, 7.0, 9.0, 10.0, 8.0, 6.0, 8.0, 6.0, 6.0, 6.0, 9.0, 6.0, 6.0, 6.0, 8.0},
            {10.0, 10.0, 10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,}, //cum laudge
            {8.0, 7.0, 9.0, 8.0, 7.0, 9.0, 9.0, 6.0, 7.0, 8.0, 6.0, 7.0, 7.0, 8.0, 6.0, 6.0, 9.0, 6.0, 9.0, 8.0, 10.0, 7.0, 10.0, 10.0, 8.0, 7.0, 9.0, 9.0, 7.0, 7.0},
            {8.0, 10.0, 8.0, 8.0, 7.0, 8.0, 6.0, 7.0, 8.0, 9.0, 7.0, 6.0, 7.0, 8.0, 8.0, 9.0, 9.0, 6.0, 7.0, 7.0, 6.0, 10.0, 7.0, 8.0, 6.0, 6.0, 7.0, 9.0, 6.0, 6.0},
            {6.0, 7.0, 6.0, 6.0, 6.0, 8.0, 10.0, 8.0, 10.0, 9.0, 7.0, 7.0, 7.0, 6.0, 8.0, 8.0, 6.0, 6.0, 6.0, 7.0, 9.0, 8.0, 8.0, 9.0, 8.0, 8.0, 10.0, 6.0, 6.0, 6.0},
            {9.0, 10.0, 6.0, 7.0, 7.0, 6.0, 9.0, 6.0, 8.0, 8.0, 7.0, 7.0, 6.0, 6.0, 9.0, 6.0, 8.0, 6.0, 8.0, 9.0, 8.0, 9.0, 8.0, 7.0, 6.0, 6.0, 8.0, 6.0, 7.0, 8.0},
            {7.0, 8.0, 10.0, 6.0, 7.0, 7.0, 6.0, 6.0, 8.0, 7.0, 6.0, 6.0, 8.0, 7.0, 6.0, 8.0, 8.0, 6.0, 9.0, 6.0, 8.0, 8.0, 7.0, 9.0, 9.0, 8.0, 10.0, 6.0, 7.0, 8.0},
            {8.0, 8.0, 7.0, 7.0, 7.0, 6.0, 8.0, 6.0, 10.0, 9.0, 6.0, 8.0, 7.0, 7.0, 9.0, 6.0, 8.0, 6.0, 6.0, 7.0, 8.0, 10.0, 7.0, 8.0, 7.0, 6.0, 9.0, 6.0, 9.0, 6.0},
            {7.0, 9.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 6.0, 8.0, 8.0, 8.0, 6.0, 7.0, 7.0, 7.0, 8.0, 6.0, 7.0, 9.0, 7.0, 6.0, 8.0, 7.0, 10.0, 7.0, 7.0, 6.0},
            {8.0, 8.0, 8.0, 7.0, 8.0, 7.0, 8.0, 6.0, 7.0, 10.0, 6.0, 7.0, 7.0, 7.0, 9.0, 9.0, 7.0, 6.0, 8.0, 6.0, 10.0, 8.0, 6.0, 6.0, 6.0, 6.0, 10.0, 8.0, 6.0, 6.0},
            {9.0, 8.0, 6.0, 8.0, 6.0, 6.0, 10.0, 7.0, 8.0, 8.0, 7.0, 8.0, 8.0, 9.0, 7.0, 9.0, 9.0, 6.0, 8.0, 6.0, 7.0, 7.0, 6.0, 9.0, 7.0, 6.0, 6.0, 6.0, 9.0, 7.0},
            {8.0, 9.0, 9.0, 7.0, 6.0, 6.0, 8.0, 9.0, 7.0, 7.0, 6.0, 8.0, 10.0, 8.0, 7.0, 10.0, 8.0, 6.0, 6.0, 7.0, 7.0, 9.0, 7.0, 8.0, 7.0, 7.0, 6.0, 6.0, 8.0, 6.0},
            {10.0, 9.0, 7.0, 7.0, 7.0, 6.0, 9.0, 7.0, 8.0, 10.0, 6.0, 6.0, 7.0, 8.0, 9.0, 7.0, 8.0, 6.0, 6.0, 6.0, 9.0, 7.0, 7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 6.0, 6.0},
            {6.0, 7.0, 8.0, 6.0, 6.0, 7.0, 8.0, 6.0, 9.0, 10.0, 6.0, 6.0, 7.0, 6.0, 9.0, 7.0, 6.0, 6.0, 7.0, 8.0, 9.0, 6.0, 7.0, 10.0, 8.0, 8.0, 8.0, 6.0, 6.0, 6.0},
            {7.0, 7.0, 6.0, 7.0, 8.0, 8.0, 6.0, 6.0, 10.0, 8.0, 7.0, 7.0, 7.0, 6.0, 7.0, 9.0, 6.0, 6.0, 8.0, 6.0, 6.0, 10.0, 9.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 8.0},
            {6.0, 8.0, 6.0, 7.0, 9.0, 7.0, 6.0, 8.0, 7.0, 7.0, 7.0, 6.0, 8.0, 9.0, 6.0, 6.0, 7.0, 6.0, 9.0, 7.0, 10.0, 9.0, 10.0, 9.0, 8.0, 6.0, 9.0, 10.0, 8.0, 6.0},
            {6.0, 9.0, 7.0, 7.0, 8.0, 8.0, 9.0, 6.0, 6.0, 6.0, 7.0, 6.0, 9.0, 6.0, 7.0, 6.0, 10.0, 7.0, 7.0, 6.0, 8.0, 8.0, 6.0, 7.0, 6.0, 7.0, 6.0, 6.0, 7.0, 6.0},
            {9.0, 8.0, 6.0, 6.0, 7.0, 6.0, 8.0, 8.0, 6.0, 7.0, 7.0, 6.0, 6.0, 7.0, 8.0, 8.0, 8.0, 7.0, 10.0, 7.0, 9.0, 8.0, 9.0, 7.0, 6.0, 8.0, 8.0, 6.0, 7.0, 6.0},
            {9.0, 9.0, 6.0, 6.0, 6.0, 6.0, 6.0, 8.0, 9.0, 7.0, 8.0, 9.0, 8.0, 6.0, 7.0, 6.0, 6.0, 6.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 6.0, 7.0, 7.0, 8.0, 6.0, 6.0},
            {10.0, 8.0, 6.0, 7.0, 8.0, 6.0, 9.0, 10.0, 6.0, 10.0, 8.0, 6.0, 6.0, 8.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 7.0, 8.0, 7.0, 8.0, 10.0, 7.0, 6.0, 6.0, 10.0, 6.0},
            {6.0, 6.0, 6.0, 8.0, 8.0, 9.0, 8.0, 7.0, 6.0, 10.0, 8.0, 6.0, 9.0, 7.0, 7.0, 6.0, 8.0, 6.0, 6.0, 7.0, 7.0, 9.0, 6.0, 7.0, 6.0, 8.0, 8.0, 9.0, 6.0, 6.0},
            {8.0, 10.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 6.0, 8.0, 9.0, 10.0, 6.0, 8.0, 7.0, 6.0, 8.0, 7.0, 9.0, 6.0, 9.0, 7.0, 6.0, 8.0, 9.0, 7.0, 7.0, 6.0},
            {7.0, 9.0, 7.0, 8.0, 9.0, 6.0, 7.0, 9.0, 6.0, 8.0, 9.0, 7.0, 6.0, 8.0, 7.0, 6.0, 7.0, 9.0, 8.0, 8.0, 10.0, 9.0, 6.0, 9.0, 10.0, 8.0, 8.0, 6.0, 10.0, 7.0},
            {8.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 9.0, 6.0, 6.0, 6.0, 6.0, 10.0, 7.0, 6.0, 6.0, 10.0, 6.0, 7.0, 9.0, 8.0, 6.0, 9.0, 8.0, 7.0, 7.0, 6.0, 6.0, 8.0, 7.0},
            {8.0, 9.0, 8.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 6.0, 6.0, 8.0, 8.0, 8.0, 8.0, 7.0, 6.0, 8.0, 7.0, 7.0, 10.0, 6.0, 6.0, 7.0, 6.0, 9.0, 6.0, 6.0, 9.0},
            {7.0, 8.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 9.0, 6.0, 8.0, 9.0, 8.0, 9.0, 8.0, 6.0, 6.0, 8.0, 7.0, 8.0, 7.0, 6.0, 6.0, 6.0, 9.0, 7.0, 7.0, 6.0, 6.0},
            {7.0, 7.0, 6.0, 8.0, 9.0, 8.0, 7.0, 8.0, 6.0, 8.0, 6.0, 6.0, 7.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 9.0, 6.0, 6.0, 8.0, 8.0, 6.0, 8.0, 9.0, 6.0, 7.0, 6.0},
            {9.0, 8.0, 7.0, 6.0, 7.0, 6.0, 6.0, 8.0, 8.0, 6.0, 6.0, 6.0, 8.0, 7.0, 7.0, 8.0, 9.0, 8.0, 7.0, 8.0, 6.0, 10.0, 10.0, 8.0, 6.0, 8.0, 8.0, 6.0, 8.0, 6.0},
            {7.0, 8.0, 7.0, 6.0, 7.0, 7.0, 6.0, 7.0, 9.0, 8.0, 6.0, 8.0, 10.0, 8.0, 7.0, 6.0, 8.0, 7.0, 8.0, 7.0, 7.0, 9.0, 8.0, 9.0, 6.0, 6.0, 7.0, 6.0, 6.0, 6.0},
            {7.0, 8.0, 7.0, 7.0, 8.0, 8.0, 6.0, 6.0, 6.0, 7.0, 6.0, 7.0, 6.0, 8.0, 8.0, 6.0, 10.0, 8.0, 7.0, 7.0, 6.0, 9.0, 9.0, 6.0, 6.0, 6.0, 7.0, 9.0, 6.0, 8.0},
            {8.0, 8.0, 6.0, 6.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 7.0, 7.0, 10.0, 6.0, 7.0, 9.0, 7.0, 7.0, 8.0, 7.0, 8.0, 8.0, 7.0, 6.0, 6.0, 7.0, 8.0, 8.0, 8.0, 7.0},
            {7.0, 9.0, 6.0, 6.0, 7.0, 7.0, 7.0, 6.0, 8.0, 7.0, 6.0, 7.0, 8.0, 8.0, 7.0, 8.0, 7.0, 9.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 8.0, 6.0},
            {7.0, 8.0, 8.0, 6.0, 6.0, 7.0, 8.0, 6.0, 7.0, 8.0, 8.0, 6.0, 6.0, 9.0, 8.0, 8.0, 6.0, 6.0, 6.0, 6.0, 8.0, 7.0, 6.0, 9.0, 7.0, 6.0, 10.0, 7.0, 6.0, 6.0},
            {8.0, 10.0, 7.0, 8.0, 7.0, 8.0, 6.0, 6.0, 8.0, 8.0, 7.0, 6.0, 7.0, 8.0, 6.0, 8.0, 6.0, 7.0, 8.0, 9.0, 7.0, 8.0, 6.0, 6.0, 6.0, 8.0, 6.0, 6.0, 8.0, 6.0},
            {7.0, 9.0, 6.0, 9.0, 6.0, 6.0, 6.0, 7.0, 10.0, 6.0, 6.0, 6.0, 6.0, 8.0, 9.0, 8.0, 6.0, 7.0, 7.0, 6.0, 7.0, 7.0, 7.0, 9.0, 7.0, 8.0, 6.0, 6.0, 7.0, 6.0},
            {8.0, 6.0, 7.0, 7.0, 7.0, 8.0, 7.0, 6.0, 9.0, 7.0, 6.0, 7.0, 10.0, 7.0, 6.0, 8.0, 9.0, 8.0, 9.0, 6.0, 7.0, 9.0, 6.0, 10.0, 6.0, 7.0, 9.0, 7.0, 7.0, 8.0},
            {6.0, 10.0, 7.0, 6.0, 9.0, 6.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 7.0, 6.0, 7.0, 9.0, 7.0, 6.0, 8.0, 10.0, 9.0, 8.0, 9.0, 6.0, 6.0, 10.0, 8.0, 6.0, 6.0, 8.0},
            {6.0, 10.0, 6.0, 7.0, 7.0, 7.0, 8.0, 9.0, 6.0, 10.0, 7.0, 8.0, 9.0, 8.0, 7.0, 10.0, 6.0, 6.0, 8.0, 7.0, 10.0, 10.0, 7.0, 6.0, 6.0, 6.0, 7.0, 6.0, 8.0, 7.0},
            {8.0, 10.0, 6.0, 6.0, 7.0, 8.0, 6.0, 9.0, 7.0, 6.0, 6.0, 8.0, 9.0, 6.0, 6.0, 6.0, 8.0, 6.0, 8.0, 9.0, 7.0, 6.0, 8.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0},
            {6.0, 10.0, 7.0, 7.0, 7.0, 9.0, 6.0, 6.0, 7.0, 6.0, 6.0, 6.0, 10.0, 6.0, 6.0, 7.0, 6.0, 8.0, 8.0, 6.0, 9.0, 8.0, 7.0, 6.0, 6.0, 6.0, 9.0, 6.0, 8.0, 10.0},
            {8.0, 10.0, 6.0, 8.0, 7.0, 7.0, 7.0, 6.0, 8.0, 10.0, 6.0, 6.0, 7.0, 6.0, 9.0, 6.0, 8.0, 9.0, 7.0, 6.0, 8.0, 7.0, 10.0, 8.0, 6.0, 8.0, 9.0, 7.0, 7.0, 6.0},
            {9.0, 8.0, 6.0, 9.0, 7.0, 6.0, 8.0, 9.0, 9.0, 6.0, 6.0, 7.0, 8.0, 8.0, 8.0, 6.0, 7.0, 6.0, 7.0, 7.0, 8.0, 7.0, 7.0, 7.0, 7.0, 8.0, 10.0, 6.0, 10.0, 6.0},
            {9.0, 10.0, 6.0, 9.0, 8.0, 6.0, 8.0, 6.0, 7.0, 9.0, 7.0, 7.0, 8.0, 6.0, 7.0, 6.0, 7.0, 8.0, 6.0, 9.0, 9.0, 7.0, 6.0, 8.0, 6.0, 9.0, 6.0, 10.0, 7.0, 7.0},
            {6.0, 10.0, 9.0, 9.0, 8.0, 7.0, 6.0, 7.0, 7.0, 8.0, 8.0, 6.0, 8.0, 6.0, 7.0, 9.0, 8.0, 8.0, 6.0, 7.0, 6.0, 9.0, 6.0, 7.0, 6.0, 8.0, 7.0, 6.0, 8.0, 6.0},
            {6.0, 8.0, 6.0, 7.0, 8.0, 8.0, 6.0, 6.0, 9.0, 7.0, 7.0, 6.0, 7.0, 7.0, 7.0, 10.0, 7.0, 7.0, 8.0, 6.0, 6.0, 6.0, 6.0, 7.0, 6.0, 7.0, 9.0, 6.0, 7.0, 6.0},
            {10.0, 10.0, 7.0, 6.0, 6.0, 7.0, 8.0, 10.0, 8.0, 7.0, 6.0, 6.0, 9.0, 8.0, 6.0, 10.0, 6.0, 7.0, 6.0, 9.0, 6.0, 8.0, 7.0, 8.0, 8.0, 6.0, 7.0, 6.0, 8.0, 6.0},
            {9.0, 6.0, 7.0, 6.0, 6.0, 6.0, 8.0, 10.0, 6.0, 7.0, 6.0, 7.0, 9.0, 6.0, 6.0, 9.0, 8.0, 7.0, 8.0, 7.0, 7.0, 9.0, 9.0, 7.0, 6.0, 6.0, 8.0, 6.0, 8.0, 6.0},
            {6.0, 10.0, 8.0, 7.0, 9.0, 7.0, 6.0, 7.0, 8.0, 8.0, 9.0, 6.0, 6.0, 8.0, 6.0, 7.0, 6.0, 6.0, 9.0, 6.0, 8.0, 7.0, 7.0, 6.0, 6.0, 6.0, 10.0, 6.0, 6.0, 9.0},
            {6.0, 10.0, 6.0, 9.0, 8.0, 6.0, 7.0, 10.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 8.0, 6.0, 8.0, 6.0, 9.0, 10.0, 7.0, 9.0, 6.0, 10.0, 6.0, 6.0, 7.0, 8.0},
            {7.0, 6.0, 6.0, 6.0, 7.0, 8.0, 8.0, 6.0, 6.0, 10.0, 6.0, 6.0, 10.0, 7.0, 7.0, 6.0, 10.0, 6.0, 8.0, 6.0, 8.0, 6.0, 8.0, 7.0, 8.0, 8.0, 9.0, 6.0, 8.0, 6.0},
            {6.0, 8.0, 10.0, 7.0, 8.0, 6.0, 10.0, 10.0, 6.0, 7.0, 6.0, 7.0, 6.0, 8.0, 7.0, 6.0, 9.0, 6.0, 9.0, 6.0, 7.0, 10.0, 7.0, 10.0, 8.0, 8.0, 8.0, 7.0, 8.0, 6.0},
            {9.0, 10.0, 8.0, 9.0, 7.0, 6.0, 6.0, 6.0, 9.0, 7.0, 6.0, 7.0, 8.0, 10.0, 6.0, 8.0, 6.0, 8.0, 7.0, 6.0, 9.0, 7.0, 6.0, 10.0, 6.0, 9.0, 9.0, 6.0, 9.0, 7.0},
            {6.0, 9.0, 6.0, 7.0, 8.0, 6.0, 8.0, 6.0, 8.0, 6.0, 6.0, 8.0, 7.0, 7.0, 8.0, 7.0, 9.0, 8.0, 7.0, 6.0, 8.0, 9.0, 7.0, 8.0, 6.0, 8.0, 9.0, 7.0, 6.0, 6.0},
            {7.0, 9.0, 6.0, 6.0, 6.0, 6.0, 9.0, 6.0, 9.0, 6.0, 8.0, 6.0, 9.0, 7.0, 7.0, 6.0, 9.0, 6.0, 9.0, 9.0, 10.0, 9.0, 8.0, 9.0, 6.0, 8.0, 6.0, 8.0, 6.0, 8.0},
            {8.0, 10.0, 7.0, 8.0, 6.0, 8.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 8.0, 6.0, 8.0, 6.0, 6.0, 7.0, 7.0, 6.0, 8.0, 10.0, 8.0, 7.0, 6.0, 6.0, 7.0, 8.0, 6.0, 7.0},
            {6.0, 8.0, 6.0, 8.0, 6.0, 6.0, 7.0, 8.0, 7.0, 7.0, 6.0, 6.0, 8.0, 8.0, 6.0, 9.0, 10.0, 7.0, 8.0, 6.0, 7.0, 7.0, 6.0, 7.0, 6.0, 9.0, 6.0, 6.0, 8.0, 6.0},
            {6.0, 7.0, 6.0, 9.0, 9.0, 7.0, 7.0, 7.0, 8.0, 8.0, 8.0, 7.0, 8.0, 6.0, 10.0, 7.0, 7.0, 7.0, 8.0, 10.0, 8.0, 10.0, 10.0, 8.0, 7.0, 6.0, 6.0, 6.0, 9.0, 6.0},
            {8.0, 8.0, 8.0, 7.0, 7.0, 6.0, 7.0, 6.0, 9.0, 7.0, 6.0, 6.0, 8.0, 9.0, 7.0, 7.0, 8.0, 6.0, 8.0, 6.0, 9.0, 6.0, 7.0, 6.0, 6.0, 7.0, 6.0, 7.0, 8.0, 7.0},
            {9.0, 9.0, 6.0, 6.0, 7.0, 6.0, 7.0, 7.0, 10.0, 7.0, 10.0, 7.0, 8.0, 7.0, 6.0, 10.0, 6.0, 6.0, 8.0, 7.0, 7.0, 9.0, 7.0, 7.0, 6.0, 8.0, 8.0, 6.0, 6.0, 6.0},
            {7.0, 8.0, 6.0, 8.0, 8.0, 7.0, 6.0, 7.0, 7.0, 8.0, 8.0, 7.0, 6.0, 7.0, 8.0, 7.0, 6.0, 7.0, 9.0, 7.0, 6.0, 8.0, 9.0, 9.0, 6.0, 8.0, 10.0, 7.0, 7.0, 6.0},
            {7.0, 9.0, 8.0, 7.0, 7.0, 7.0, 6.0, 8.0, 6.0, 6.0, 6.0, 7.0, 9.0, 7.0, 7.0, 6.0, 8.0, 7.0, 8.0, 6.0, 6.0, 7.0, 6.0, 8.0, 8.0, 7.0, 6.0, 6.0, 9.0, 10.0},
            {9.0, 7.0, 8.0, 7.0, 7.0, 8.0, 8.0, 8.0, 10.0, 10.0, 6.0, 6.0, 10.0, 7.0, 7.0, 8.0, 7.0, 7.0, 9.0, 6.0, 8.0, 8.0, 7.0, 9.0, 6.0, 7.0, 7.0, 6.0, 6.0, 6.0},
            {8.0, 10.0, 8.0, 8.0, 7.0, 6.0, 7.0, 8.0, 7.0, 7.0, 6.0, 10.0, 7.0, 7.0, 10.0, 7.0, 6.0, 8.0, 7.0, 6.0, 8.0, 8.0, 7.0, 9.0, 6.0, 6.0, 9.0, 6.0, 9.0, 7.0},
            {8.0, 6.0, 8.0, 6.0, 9.0, 7.0, 10.0, 7.0, 8.0, 8.0, 7.0, 6.0, 7.0, 8.0, 7.0, 6.0, 10.0, 6.0, 8.0, 9.0, 6.0, 9.0, 6.0, 7.0, 6.0, 6.0, 9.0, 7.0, 6.0, 7.0},
            {8.0, 7.0, 6.0, 10.0, 6.0, 6.0, 7.0, 6.0, 6.0, 8.0, 6.0, 7.0, 8.0, 10.0, 8.0, 6.0, 10.0, 6.0, 7.0, 6.0, 10.0, 6.0, 9.0, 8.0, 8.0, 8.0, 6.0, 9.0, 7.0, 7.0},
            {7.0, 8.0, 6.0, 9.0, 7.0, 6.0, 6.0, 9.0, 9.0, 6.0, 6.0, 6.0, 8.0, 9.0, 7.0, 8.0, 8.0, 6.0, 6.0, 6.0, 8.0, 6.0, 9.0, 8.0, 7.0, 7.0, 8.0, 8.0, 6.0, 9.0},
            {8.0, 7.0, 7.0, 9.0, 7.0, 6.0, 7.0, 6.0, 10.0, 6.0, 6.0, 6.0, 9.0, 7.0, 6.0, 7.0, 6.0, 8.0, 8.0, 6.0, 6.0, 7.0, 8.0, 6.0, 6.0, 7.0, 7.0, 6.0, 6.0, 9.0},
            {8.0, 9.0, 7.0, 8.0, 8.0, 6.0, 10.0, 8.0, 8.0, 8.0, 7.0, 6.0, 7.0, 7.0, 8.0, 8.0, 8.0, 9.0, 6.0, 10.0, 6.0, 10.0, 6.0, 10.0, 6.0, 7.0, 8.0, 7.0, 8.0, 6.0},
            {6.0, 8.0, 8.0, 6.0, 6.0, 6.0, 9.0, 7.0, 6.0, 10.0, 6.0, 8.0, 8.0, 7.0, 9.0, 9.0, 6.0, 7.0, 6.0, 6.0, 10.0, 7.0, 6.0, 8.0, 6.0, 9.0, 8.0, 6.0, 7.0, 6.0},
            {10.0, 10.0, 6.0, 8.0, 9.0, 6.0, 7.0, 7.0, 8.0, 8.0, 7.0, 7.0, 7.0, 6.0, 8.0, 9.0, 10.0, 6.0, 8.0, 7.0, 9.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 6.0, 6.0, 6.0},
            {6.0, 10.0, 6.0, 7.0, 7.0, 10.0, 8.0, 7.0, 10.0, 9.0, 6.0, 7.0, 6.0, 9.0, 8.0, 7.0, 7.0, 6.0, 7.0, 8.0, 6.0, 6.0, 8.0, 8.0, 8.0, 8.0, 9.0, 6.0, 6.0, 6.0},
            {8.0, 10.0, 6.0, 7.0, 8.0, 8.0, 8.0, 7.0, 7.0, 8.0, 6.0, 6.0, 9.0, 7.0, 7.0, 6.0, 6.0, 9.0, 8.0, 7.0, 8.0, 6.0, 6.0, 7.0, 9.0, 6.0, 10.0, 7.0, 7.0, 6.0},
            {10.0, 7.0, 6.0, 7.0, 6.0, 10.0, 7.0, 8.0, 6.0, 8.0, 8.0, 7.0, 8.0, 8.0, 7.0, 7.0, 9.0, 6.0, 6.0, 9.0, 6.0, 8.0, 6.0, 7.0, 7.0, 8.0, 6.0, 7.0, 7.0, 7.0},
            {6.0, 6.0, 8.0, 6.0, 6.0, 6.0, 7.0, 7.0, 9.0, 10.0, 6.0, 6.0, 8.0, 7.0, 8.0, 8.0, 6.0, 8.0, 8.0, 9.0, 7.0, 10.0, 7.0, 8.0, 7.0, 7.0, 10.0, 7.0, 8.0, 8.0},
            {8.0, 7.0, 7.0, 6.0, 8.0, 7.0, 7.0, 8.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 9.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 6.0, 7.0, 8.0, 6.0, 7.0, 9.0, 6.0, 8.0, 7.0},
            {8.0, 8.0, 6.0, 8.0, 7.0, 7.0, 7.0, 6.0, 9.0, 6.0, 6.0, 7.0, 6.0, 6.0, 10.0, 8.0, 8.0, 6.0, 9.0, 6.0, 8.0, 6.0, 9.0, 7.0, 6.0, 6.0, 9.0, 6.0, 10.0, 6.0},
            {8.0, 6.0, 9.0, 8.0, 6.0, 8.0, 6.0, 7.0, 8.0, 8.0, 6.0, 6.0, 6.0, 7.0, 6.0, 7.0, 10.0, 8.0, 10.0, 6.0, 9.0, 8.0, 9.0, 10.0, 6.0, 7.0, 6.0, 7.0, 10.0, 6.0},
            {6.0, 9.0, 6.0, 7.0, 6.0, 6.0, 7.0, 7.0, 8.0, 8.0, 6.0, 9.0, 7.0, 8.0, 10.0, 8.0, 9.0, 8.0, 6.0, 6.0, 8.0, 8.0, 6.0, 8.0, 7.0, 9.0, 7.0, 7.0, 8.0, 9.0},
            {7.0, 6.0, 7.0, 7.0, 6.0, 6.0, 8.0, 8.0, 7.0, 8.0, 6.0, 7.0, 7.0, 9.0, 7.0, 7.0, 10.0, 7.0, 7.0, 6.0, 8.0, 8.0, 6.0, 9.0, 9.0, 7.0, 7.0, 6.0, 7.0, 6.0},
            {8.0, 7.0, 6.0, 6.0, 9.0, 6.0, 8.0, 6.0, 7.0, 8.0, 6.0, 6.0, 9.0, 8.0, 6.0, 6.0, 9.0, 6.0, 7.0, 8.0, 6.0, 10.0, 8.0, 8.0, 8.0, 8.0, 8.0, 7.0, 9.0, 6.0},
            {8.0, 7.0, 7.0, 8.0, 7.0, 9.0, 7.0, 6.0, 7.0, 6.0, 6.0, 6.0, 9.0, 7.0, 6.0, 6.0, 10.0, 7.0, 9.0, 8.0, 8.0, 7.0, 6.0, 8.0, 6.0, 8.0, 8.0, 6.0, 8.0, 7.0},
            {6.0, 8.0, 6.0, 8.0, 6.0, 6.0, 6.0, 10.0, 7.0, 8.0, 6.0, 8.0, 6.0, 8.0, 8.0, 8.0, 6.0, 7.0, 8.0, 7.0, 9.0, 6.0, 6.0, 7.0, 8.0, 7.0, 7.0, 8.0, 6.0, 7.0},
            {6.0, 6.0, 6.0, 6.0, 7.0, 6.0, 9.0, 8.0, 6.0, 7.0, 7.0, 7.0, 8.0, 6.0, 9.0, 7.0, 7.0, 7.0, 7.0, 6.0, 9.0, 10.0, 8.0, 6.0, 7.0, 8.0, 8.0, 7.0, 7.0, 8.0},
            {7.0, 10.0, 6.0, 8.0, 6.0, 7.0, 7.0, 6.0, 9.0, 6.0, 6.0, 10.0, 9.0, 7.0, 7.0, 6.0, 6.0, 10.0, 6.0, 6.0, 8.0, 8.0, 8.0, 6.0, 6.0, 8.0, 10.0, 7.0, 6.0, 7.0},
            {6.0, 10.0, 6.0, 7.0, 6.0, 8.0, 9.0, 7.0, 9.0, 6.0, 6.0, 7.0, 6.0, 6.0, 7.0, 9.0, 9.0, 8.0, 8.0, 8.0, 6.0, 9.0, 7.0, 9.0, 6.0, 7.0, 8.0, 8.0, 7.0, 6.0},
            {6.0, 9.0, 6.0, 8.0, 6.0, 7.0, 7.0, 6.0, 8.0, 8.0, 6.0, 6.0, 7.0, 7.0, 7.0, 8.0, 7.0, 6.0, 7.0, 6.0, 7.0, 10.0, 7.0, 6.0, 8.0, 7.0, 10.0, 8.0, 10.0, 8.0},
            {6.0, 7.0, 8.0, 6.0, 6.0, 8.0, 9.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 8.0, 7.0, 10.0, 7.0, 6.0, 7.0, 7.0, 6.0, 7.0, 6.0, 6.0, 6.0, 8.0, 8.0, 7.0, 8.0, 7.0},
            {8.0, 8.0, 10.0, 9.0, 6.0, 6.0, 6.0, 6.0, 9.0, 10.0, 6.0, 6.0, 6.0, 6.0, 8.0, 9.0, 7.0, 6.0, 8.0, 7.0, 7.0, 8.0, 6.0, 7.0, 6.0, 6.0, 8.0, 7.0, 10.0, 6.0},
            {8.0, 9.0, 9.0, 8.0, 7.0, 7.0, 6.0, 7.0, 6.0, 9.0, 6.0, 7.0, 9.0, 7.0, 7.0, 6.0, 10.0, 6.0, 6.0, 8.0, 6.0, 7.0, 6.0, 9.0, 6.0, 7.0, 10.0, 6.0, 7.0, 7.0},
            {7.0, 8.0, 6.0, 8.0, 7.0, 6.0, 8.0, 10.0, 6.0, 6.0, 6.0, 9.0, 7.0, 6.0, 8.0, 8.0, 8.0, 6.0, 7.0, 8.0, 8.0, 8.0, 6.0, 7.0, 7.0, 7.0, 8.0, 8.0, 6.0, 7.0},
            {8.0, 7.0, 6.0, 6.0, 8.0, 6.0, 9.0, 6.0, 7.0, 7.0, 6.0, 8.0, 8.0, 8.0, 7.0, 7.0, 6.0, 7.0, 6.0, 8.0, 7.0, 10.0, 8.0, 8.0, 6.0, 7.0, 7.0, 9.0, 7.0, 8.0},
            {7.0, 7.0, 6.0, 9.0, 6.0, 6.0, 8.0, 10.0, 7.0, 9.0, 6.0, 6.0, 9.0, 10.0, 6.0, 6.0, 7.0, 7.0, 7.0, 9.0, 6.0, 8.0, 10.0, 9.0, 6.0, 9.0, 8.0, 7.0, 6.0, 8.0},
            {10.0, 10.0, 8.0, 6.0, 10.0, 7.0, 6.0, 7.0, 7.0, 6.0, 8.0, 6.0, 8.0, 9.0, 6.0, 8.0, 9.0, 7.0, 6.0, 9.0, 6.0, 7.0, 6.0, 8.0, 8.0, 10.0, 8.0, 6.0, 6.0, 6.0},
            {10.0, 6.0, 8.0, 6.0, 7.0, 6.0, 6.0, 6.0, 9.0, 6.0, 6.0, 8.0, 6.0, 7.0, 8.0, 10.0, 8.0, 7.0, 6.0, 8.0, 7.0, 9.0, 7.0, 8.0, 9.0, 8.0, 7.0, 8.0, 6.0, 6.0},
            {8.0, 10.0, 6.0, 7.0, 6.0, 7.0, 9.0, 8.0, 6.0, 8.0, 7.0, 6.0, 7.0, 7.0, 7.0, 7.0, 10.0, 6.0, 7.0, 7.0, 8.0, 9.0, 7.0, 8.0, 8.0, 9.0, 8.0, 7.0, 10.0, 6.0},
            {6.0, 9.0, 6.0, 8.0, 6.0, 8.0, 8.0, 8.0, 7.0, 9.0, 9.0, 7.0, 8.0, 7.0, 6.0, 10.0, 7.0, 7.0, 9.0, 6.0, 6.0, 10.0, 6.0, 9.0, 6.0, 8.0, 7.0, 7.0, 6.0, 6.0},
            {7.0, 6.0, 10.0, 6.0, 8.0, 6.0, 8.0, 8.0, 7.0, 7.0, 7.0, 6.0, 10.0, 7.0, 7.0, 7.0, 6.0, 7.0, 9.0, 6.0, 6.0, 6.0, 8.0, 7.0, 6.0, 8.0, 10.0, 7.0, 8.0, 6.0},
            {9.0, 10.0, 10.0, 6.0, 8.0, 6.0, 9.0, 7.0, 7.0, 7.0, 6.0, 7.0, 6.0, 6.0, 7.0, 6.0, 8.0, 7.0, 8.0, 10.0, 7.0, 10.0, 8.0, 8.0, 8.0, 10.0, 9.0, 8.0, 6.0, 8.0},
            {6.0, 6.0, 6.0, 9.0, 6.0, 6.0, 8.0, 10.0, 9.0, 7.0, 8.0, 8.0, 10.0, 7.0, 6.0, 9.0, 7.0, 6.0, 10.0, 7.0, 8.0, 8.0, 6.0, 6.0, 6.0, 7.0, 9.0, 6.0, 6.0, 6.0},
            {6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 10.0, 8.0, 7.0, 8.0, 6.0, 6.0, 8.0, 7.0, 7.0, 6.0, 10.0, 8.0, 7.0, 9.0, 6.0, 6.0, 9.0, 6.0, 6.0, 6.0, 10.0, 6.0, 7.0, 6.0},
};

        double[][] current_grades={
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 8.0, -1.0, 8.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 5.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 5.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 5.0, -1.0, 5.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 5.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 10.0, -1.0, 8.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 8.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 8.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 8.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 5.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 4.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 6.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 9.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 9.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 9.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 6.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 5.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 10.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 9.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 8.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 10.0, 10.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 5.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 5.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 5.0, -1.0, 8.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 9.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 5.0, -1.0, 5.0, -1.0, 6.0, -1.0, -1.0, 4.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 6.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 5.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 5.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 5.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 5.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 8.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 5.0, -1.0, 6.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 6.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 5.0, -1.0, -1.0, 5.0, -1.0, -1.0, -1.0, -1.0, 6.0, 5.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 6.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 8.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 9.0, 10.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 6.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 7.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 8.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 5.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 5.0, -1.0, 5.0, -1.0, -1.0, 4.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 9.0, -1.0, -1.0, 10.0, -1.0, -1.0, -1.0, -1.0, 9.0, 10.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 8.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 7.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 9.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 9.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 8.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 7.0, -1.0, 8.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 8.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 10.0, -1.0, 9.0, -1.0, 9.0, -1.0, -1.0, 10.0, -1.0, -1.0, -1.0, -1.0, 8.0, 10.0, -1.0, -1.0, -1.0},
            {-1.0, 9.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 8.0, -1.0, 6.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 10.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 8.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 9.0, 9.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 8.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 6.0, -1.0, -1.0, -1.0, -1.0, 6.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 7.0, -1.0, 6.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 6.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 7.0, -1.0, 7.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},
            {-1.0, 7.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 6.0, -1.0, 7.0, -1.0, 6.0, -1.0, -1.0, 7.0, -1.0, -1.0, -1.0, -1.0, 7.0, 7.0, -1.0, -1.0, -1.0},
            {-1.0, 8.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 8.0, -1.0, 9.0, -1.0, 7.0, -1.0, -1.0, 9.0, -1.0, -1.0, -1.0, -1.0, 7.0, 8.0, -1.0, -1.0, -1.0},            

        }; */
        
        int number_of_courses = graduate_grades[0].length;

        int[] cl_student_id = Cum_Laude_Graduates(graduate_grades);
        
        /* 
        //only used for printing the arrays  (id's are not not the ones from csv for currentGrades);
        System.out.println("number of courses: "+number_of_courses);
        System.out.println("graduate_grades for id's: \n");
        for(int i=0; i<graduate_grades.length; i++){
            if(graduate_grades[i] == null){continue;}
            System.out.println(i+": "+Arrays.toString(graduate_grades[i]));
		}
        System.out.println("\n\n" + "graduate_grades for id's: \n");
        for(int i=0; i<current_grades.length; i++){
            if(current_grades[i] == null){continue;}
            System.out.println(i+" "+Arrays.toString(current_grades[i]));
		}
        System.out.println("\n\n");
        System.out.println("Cum Laudge student's id:\n" +Arrays.toString(cl_student_id));
    */
        Comparing_Courses(graduate_grades,number_of_courses);
    }

    public static double[][] File_To_Array(String fileName){
        try {
            double[][] studentGradesArray = new double[0][]; 
            File file=new File(fileName);
            Scanner fileScanner = new Scanner(file);

            int numOfCourses = 30;
            int studentID = -1; //small value to initialize
            int arrayLength=-1; //small value to initialize

            int linesDone = 0;
            while (fileScanner.hasNextLine() && linesDone <= 5) {
            	String line = fileScanner.nextLine();
            	linesDone++;
                int courseIndex = 0;    //keeps track of the course

            	// and one that scans the line entry per entry using the commas as delimiters
            	Scanner lineScanner = new Scanner(line);
                lineScanner.useDelimiter(",");
            	while (lineScanner.hasNext()) {
            		if (lineScanner.hasNextInt()) {
            			studentID = lineScanner.nextInt();

                        //If the index (indicated by studentID) is larger than the length of the array:
                        //  create a larger array with length studentID+1
                        if(arrayLength<studentID){
                            arrayLength = studentID;
                            studentGradesArray = Arrays.copyOf(studentGradesArray, studentID+1);
                        }
                        //initialises only the studentID's we need to save resources
                        studentGradesArray[studentID] = new double[numOfCourses];

            		} else if (lineScanner.hasNextDouble()) {
            			double d = lineScanner.nextDouble();
                        studentGradesArray[studentID][courseIndex]=d;
                        courseIndex++;
            		} else {
            			String s = lineScanner.next();
                        if(s.equals("NG")){
                            studentGradesArray[studentID][courseIndex]=-1;
                        }
                        courseIndex++;
            		}
            	}
            	lineScanner.close();
            }
            fileScanner.close();
            //prints the grades array per row with student index

            return studentGradesArray;
            
        } catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }
    }

    /**calculates the mean, median and spread for a course with support for missing values
    * @param students_grades: a 2D-array containing studentID and grades
    * @param course: index of the grade corresponding to the course for a student
    * @return double array: containing {mean, median, spread}
    */
    public static double[] MMS_Course(double[][] students_grades, int course){
        double[] mms = {-1.0, -1.0, -1.0};
        int numOfstudents = 0;
        double[] courseGrades = new double[0];

        for (double[] student : students_grades) {
            if(student==null||student[course]==-1){continue;}
            numOfstudents++;
            courseGrades = Arrays.copyOf(courseGrades, numOfstudents);
            courseGrades[courseGrades.length-1] = student[course];
        }
        Arrays.sort(courseGrades);
        System.out.println(Arrays.toString(courseGrades));
        if(numOfstudents==0)return mms;
        
        int len = courseGrades.length;

        //mean
        double sum = 0;
        for (double grade: courseGrades) {
            sum += grade;
        }
        mms[0] = round(sum/numOfstudents, 2);

        //median
        double median;
        if(len%2==1){ //odd 
            median =  courseGrades[courseGrades.length/2];
        }else{  //even 
            median = (courseGrades[len/2] + courseGrades[len/2-1])/2;
        } 
        mms[1] = round(median, 2);

        mms[2] = round(courseGrades[len-1] - courseGrades[0], 2);

        return mms;
    }

    /** Simple rounding function to specified decimal place
     *  @param k: double to be rounded
     *  @param decimalPlace: specifies the decimal place for rounding
     *  @return double rounded number
    **/
    public static double round(double k, int decimalPlace){
        return Math.round(k*Math.pow(10,decimalPlace) )/Math.pow(10,decimalPlace);
    }

    /** Simple Gpa calculator supporting missing values
     * @param student_grades: array containing only grades/missing grades !no student index!  
     * @return double GPA grade rounded to 2 decimal places
    **/
    public static double Calc_GPA(double[] student_grades ){
        // Gpa is calculated like mean (not considering credits of course)
        double sum=0.0;
        int decimal_places=2;
        for(double grade : student_grades){
            if(grade>=0){
                sum+=grade;
            }
        }
        return round((sum/student_grades.length), 2);
    }
    /** method returning array of Cum Ludge students 
     * @param graduate_grades: no support for missing values  
     * @return integer array
    **/
    public static int[] Cum_Laude_Graduates (double[][] graduate_grades ){
        double[] temp = new double[10000];
        int num_of_honors=0;
            for(int i=0; i<graduate_grades.length;i++){
                if(Calc_GPA(graduate_grades[i])>=8.00){
                    temp[num_of_honors]=i;
                    num_of_honors++;
                }
            }
        int[] honored_students_id = Array_Double_To_Int(Arrays.copyOf(temp, num_of_honors));
        return honored_students_id;
    }
    /** finding similarities between courses 
     * @param 
     * @return integer array
    **/
    public static double[] Comparing_Courses(double[][] studentGradesArray,int num_of_courses){
        double[] temp = new double[3];
        //--- graduated grades ---
        double[] means_of_courses = new double[num_of_courses];
        //getting all mean values for every course
        for(int i=0; i< num_of_courses;i++){
            //MMS_Course gives {mean, median, spread}
            means_of_courses[i]=MMS_Course(studentGradesArray, i)[0]; 
        }
        //comparing every course with each other
        //creating 2d array where collumns and rows are courses 
        //it contains similarity value (how similiar 2 courses are on scale 0-10) based on mean
        //formula 10 - |course1-course2|
        // the higher value from forumla the more similar/related courses are in terms of their mean

         double[][] course_mean_similarity = new double[num_of_courses][num_of_courses];
        for(int course_1=0;course_1<num_of_courses; course_1++){
            for(int course_2=0;course_2<num_of_courses;course_2++){
                if(course_1!=course_2){
                    // assingning rounded output (2decimal places) of forumla
                    course_mean_similarity[course_1][course_2]=  Math.round((10-Math.abs(means_of_courses[course_1]-means_of_courses    [course_2]))*Math.pow(10,2) )/Math.pow(10,2);
                }else{
                    // same course
                    course_mean_similarity[course_1][course_2]=10; 
                }
            }
        }
        // to continue (finding  most simillar means when the overall mean of courses is small )
        System.out.println(Arrays.deepToString(course_mean_similarity));
        
        //--- current grades ---
        return temp;
    }
    /** reuseable simple array prase int->double double->int
     * @param double_array/int_array: arrays of int or double type
     * @return prased array
    **/
    public static int[] Array_Double_To_Int(double[] double_array){
        int[] int_array = new int[double_array.length];
        for(int i=0;i<double_array.length;i++){
            int_array [i] = (int)double_array[i];
        }
        return int_array;
    }
    public static double[] Array_Int_To_Double(int[] int_array){
        double[] double_array = new double[int_array.length];
        for(int i=0;i<int_array.length;i++){
            double_array [i] = (double)int_array[i];
        }
        return double_array;
    }
}
